version: '3.7'

services:

  # The 'setup' service runs a one-off script which initializes the
  # 'logstash_internal' and 'kibana_system' users inside Elasticsearch with the
  # values of the passwords defined in the '.env' file.
  #
  # This task is only performed during the *initial* startup of the stack. On all
  # subsequent runs, the service simply returns immediately, without performing
  # any modification to existing users.
  setup:
    build:
      context: setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    init: true
    volumes:
      - setup:/state:Z
    environment:
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elk

  es01:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - /etc/localtime:/etc/localtime
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch01.yml:ro,z
      - ./elasticsearch/config/x-pack-core-8.1.3.jar:/usr/share/elasticsearch/modules/x-pack-core/x-pack-core-8.1.3.jar:ro,z
      - es01:/usr/share/elasticsearch/data:z
      - ./elasticsearch/config/jvm.options:/usr/share/elasticsearch/config/jvm.options:ro,z
      - ./elasticsearch/config/elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12:ro,z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: -Xmx4g -Xms4g
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
      #node.name: es01
      #cluster.name: my-es
      #discovery.seed_hosts: es02,es03
      #cluster.initial_master_nodes: es01,es02,es03
      #bootstrap.memory_lock: 'true'
    ulimits:
        memlock:
          soft: -1
          hard: -1
    networks:
      elk:
         ipv4_address: 172.18.0.4
  es02:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - /etc/localtime:/etc/localtime
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch02.yml:ro,z
      - ./elasticsearch/config/x-pack-core-8.1.3.jar:/usr/share/elasticsearch/modules/x-pack-core/x-pack-core-8.1.3.jar:ro,z
      - es02:/usr/share/elasticsearch/data:z
      - ./elasticsearch/config/jvm.options:/usr/share/elasticsearch/config/jvm.options:ro,z
      - ./elasticsearch/config/elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12:ro,z
    ports:
      - "9202:9200"
      - "9302:9300"
    environment:
      ES_JAVA_OPTS: -Xmx4g -Xms4g
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      node.name: es02
      cluster.name: my-es
      discovery.seed_hosts: es01,es03
      cluster.initial_master_nodes: es01,es02,es03
      bootstrap.memory_lock: 'true'
    ulimits:
        memlock:
          soft: -1
          hard: -1
    networks:
      elk:
         ipv4_address: 172.18.0.5
  es03:
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - /etc/localtime:/etc/localtime
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch03.yml:ro,z
      - ./elasticsearch/config/x-pack-core-8.1.3.jar:/usr/share/elasticsearch/modules/x-pack-core/x-pack-core-8.1.3.jar:ro,z
      - es03:/usr/share/elasticsearch/data:z
      - ./elasticsearch/config/jvm.options:/usr/share/elasticsearch/config/jvm.options:ro,z
      - ./elasticsearch/config/elastic-certificates.p12:/usr/share/elasticsearch/config/elastic-certificates.p12:ro,z
    ports:
      - "9203:9200"
      - "9303:9300"
    environment:
      ES_JAVA_OPTS: -Xmx4g -Xms4g
      # Bootstrap password.
      # Used to initialize the keystore during the initial startup of
      # Elasticsearch. Ignored on subsequent runs.
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      node.name: es03
      cluster.name: my-es
      discovery.seed_hosts: es02,es03
      cluster.initial_master_nodes: es01,es02,es03
      bootstrap.memory_lock: 'true'
    ulimits:
        memlock:
          soft: -1
          hard: -1
    networks:
      elk:
         ipv4_address: 172.18.0.6
  logstash:
    build:
      context: logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - /etc/localtime:/etc/localtime
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
      - ./logstash/pipeline/neth3c.conf:/usr/share/logstash/pipeline/neth3c.conf:ro,Z
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro,Z
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: -Xmx256m -Xms256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      elk:
         ipv4_address: 172.18.0.2
    depends_on:
      - es03

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    volumes:
      - /etc/localtime:/etc/localtime
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      elk:
         ipv4_address: 172.18.0.1
    depends_on:
      - es03

networks:
  elk:
    driver: bridge
    ipam:
      config:
      - subnet: "172.18.0.0/24"

volumes:
  setup:
  es01:
  es02:
  es03:
  
